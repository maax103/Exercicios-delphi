unit Unit2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls;

type
  TForm2 = class(TForm)
    lbTittle: TLabel;
    pnlResult: TPanel;
    lbNome: TLabel;
    edtQtdNumeros: TEdit;
    btnCalculate: TButton;
    lbResult: TLabel;
    procedure btnCalculateClick(Sender: TObject);
  private
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

{$R *.dfm}


procedure TForm2.btnCalculateClick(Sender: TObject);
var
  xQtdNum : Integer;
  xValidNumbers : array of Double;
  xInputNumber : Double;
  I : Integer;
begin

  xQtdNum := StrToIntDef(edtQtdNumeros.Text, 1);

  for I := 0 to xQtdNum - 1 do
  begin
    xInputNumber := StrToFloatDef(InputBox('Informar número','Número: ',''), 0);
    if (xInputNumber <= 10) and (xInputNumber >= 150) then
    begin
      SetLength(xValidNumbers, I + 1);
      xValidNumbers[I] := xInputNumber;
    end;
  end;

  xNota2 := StrToFloatDef(inputbox('Informar','Segunda nota',''),0);
  xNota3 := StrToFloatDef(inputbox('Informar','Terceira nota',''),0);

  xMedia := (xNota1 + xNota2 + xNota3) / 3;

  if xMedia >= 7 then
  begin
    lbResult.Caption := Format('%s foi provado com nota %f!',[xNome,xMedia])
  end
  else if xMedia <= 5 then
  begin
    lbResult.Caption := Format('%s foi reprovado com nota %f.',[xNome, xMedia])
  end
  else
  begin
    lbResult.Caption := Format('%s está em recuperação com nota %f.',[xNome, xMedia])
  end;


end;

end.
